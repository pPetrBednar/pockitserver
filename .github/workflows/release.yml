name: Release

on:
  workflow_dispatch:
    inputs:
      targetVersion:
        description: 'Target version for the release'
        required: true
        default: '0.0.1'

jobs:
  release:
    name: Release Pipeline
    runs-on: windows-latest
    permissions: write-all

    steps:
      - name: Specified version
        run: echo "Using version ${{ github.event.inputs.targetVersion }}"

      - name: Set execution policy to Bypass for whole system
        shell: powershell
        run: Set-ExecutionPolicy -Scope LocalMachine -ExecutionPolicy Bypass -Force

      - name: Install ps2exe PowerShell module
        shell: powershell
        run: Install-Module -Name ps2exe -Force -Scope CurrentUser -AllowClobber

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Convert PowerShell script to executable
        shell: powershell
        run: ps2exe .\GUI.ps1 .\GUI.exe -noConsole

      - name: Prepare release folder
        shell: powershell
        run: |
            # Create the directory
            New-Item -ItemType Directory -Path "HT-LR Server"
            
            # Specify the files and folders to copy
            $filesToCopy = @("GUI.exe", "config.properties")
            $foldersToCopy = @("bin", "http")
            
            # Copy files
            foreach ($file in $filesToCopy) {
                Copy-Item $file -Destination "HT-LR Server"
            }
            
            # Copy folders
            foreach ($folder in $foldersToCopy) {
                Copy-Item -Recurse $folder -Destination "HT-LR Server"
            }
        
      - name: Compress files
        shell: powershell
        run: Compress-Archive -Path @("HT-LR Server") -DestinationPath ".\HT-LR_Server_v${{ github.event.inputs.targetVersion }}.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.targetVersion }}
          release_name: HT-LR Server v${{ github.event.inputs.targetVersion }}
          body: |
            Release ${{ github.event.inputs.targetVersion }}
          draft: false
          prerelease: false

      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ".\\HT-LR_Server_v${{ github.event.inputs.targetVersion }}.zip"
          asset_name: "HT-LR_Server_v${{ github.event.inputs.targetVersion }}.zip"
          asset_content_type: application/zip
